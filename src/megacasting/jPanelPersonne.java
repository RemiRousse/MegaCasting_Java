/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package megacasting;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.table.DefaultTableModel;

import megacasting.entity.Candidat;
import megacasting.entity.Employe;
import megacasting.persistance.CandidatDAO;
import megacasting.persistance.ConnectionBDD;
import megacasting.persistance.EmployeDAO;

/**
 *
 * @author Mousse
 * @author Julien BUREAU <julien.bureau02@gmail.com>
 */
public class jPanelPersonne extends javax.swing.JPanel {

	
    private List<Employe> employes;
    private List<Candidat> candidats;
    private Connection cnx;
	
    /**
     * Creates new form jPanelPersonne
     */
    public jPanelPersonne() {
        initComponents();
        
        //Connection a la base
        ConnectionBDD connectionBDD = ConnectionBDD.getInstance();
        cnx = connectionBDD.getConnection();
        //Refrech des listes 
        refreshEmploye();
        refreshCandidat();
        
        buttonEmpl_insert.setEnabled(true);
        buttonEmpl_update.setEnabled(false);
        buttonEmpl_delete.setEnabled(false);
        buttonCand_insert.setEnabled(true);
        buttonCand_update.setEnabled(false);
        buttonCand_delete.setEnabled(false);
        
        tabbedPanePers.setUI(new BasicTabbedPaneUI() {

            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
                return 0; //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    /**
     * refrech list employe
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     */
    public void refreshEmploye(){
    	
    	EmployeDAO employeDAO = new EmployeDAO();
    	employes = new ArrayList<Employe>(employeDAO.list(cnx));
                
        DefaultTableModel model = (DefaultTableModel) tableEmpl_list.getModel();
        
        model.setNumRows(0);
        
        for (Employe e : employes) {
            model.addRow(new Object[] {
                e.getNom(),
                e.getPrenom(),
                e.getPoste(),
                e.getHabilitation()
            });
        }
    }
    
    /**
     * refrech list candidat
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     */
    public void refreshCandidat() {
    	
    	CandidatDAO candidatDAO = new CandidatDAO();
    	candidats = new ArrayList<Candidat>(candidatDAO.list(cnx));
                
        DefaultTableModel model = (DefaultTableModel) tableCand_list.getModel();
        
        model.setNumRows(0);
        
        for (Candidat e : candidats) {
            model.addRow(new Object[] {
                e.getNom(),
                e.getPrenom(),
                e.getDateNaissance(),
                e.getPays()
            });
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPers_sort = new javax.swing.JPanel();
        comboBoxPers_sort = new javax.swing.JComboBox();
        tabbedPanePers = new javax.swing.JTabbedPane();
        panelEmpl = new javax.swing.JPanel();
        panelEmpl_list = new javax.swing.JPanel();
        scrollPanelEmpl_list = new javax.swing.JScrollPane();
        tableEmpl_list = new javax.swing.JTable();
        panelEmpl_form = new javax.swing.JPanel();
        labelEmpl_nom = new javax.swing.JLabel();
        textFieldEmpl_nom = new javax.swing.JTextField();
        labelEmpl_prenom = new javax.swing.JLabel();
        textFieldEmpl_prenom = new javax.swing.JTextField();
        labelEmpl_poste = new javax.swing.JLabel();
        textFieldEmpl_poste = new javax.swing.JTextField();
        labelEmpl_habilitation = new javax.swing.JLabel();
        textFieldEmpl_habilitation = new javax.swing.JTextField();
        panelEmpl_valid = new javax.swing.JPanel();
        buttonEmpl_insert = new javax.swing.JButton();
        buttonEmpl_update = new javax.swing.JButton();
        buttonEmpl_delete = new javax.swing.JButton();
        panelCand = new javax.swing.JPanel();
        panelCand_list = new javax.swing.JPanel();
        scrollPanelCand_list = new javax.swing.JScrollPane();
        tableCand_list = new javax.swing.JTable();
        panelCand_form = new javax.swing.JPanel();
        labelCand_nom = new javax.swing.JLabel();
        textFieldCand_nom = new javax.swing.JTextField();
        labelCand_prenom = new javax.swing.JLabel();
        textFieldCand_prenom = new javax.swing.JTextField();
        labelCand_dateNaissance = new javax.swing.JLabel();
        labelCand_pays = new javax.swing.JLabel();
        textFieldCand_pays = new javax.swing.JTextField();
        textFieldCand_dateNaissance = new javax.swing.JFormattedTextField();
        panelCand_valid = new javax.swing.JPanel();
        buttonCand_insert = new javax.swing.JButton();
        buttonCand_update = new javax.swing.JButton();
        buttonCand_delete = new javax.swing.JButton();

        panelPers_sort.setBorder(javax.swing.BorderFactory.createTitledBorder("Tri"));

        comboBoxPers_sort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Employé", "Candidat" }));
        comboBoxPers_sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPers_sortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPers_sortLayout = new javax.swing.GroupLayout(panelPers_sort);
        panelPers_sort.setLayout(panelPers_sortLayout);
        panelPers_sortLayout.setHorizontalGroup(
            panelPers_sortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPers_sortLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(comboBoxPers_sort, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPers_sortLayout.setVerticalGroup(
            panelPers_sortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPers_sortLayout.createSequentialGroup()
                .addComponent(comboBoxPers_sort, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelEmpl_list.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste des employés"));

        tableEmpl_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom", "Prénom", "Poste", "Habilitation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPanelEmpl_list.setViewportView(tableEmpl_list);

        javax.swing.GroupLayout panelEmpl_listLayout = new javax.swing.GroupLayout(panelEmpl_list);
        panelEmpl_list.setLayout(panelEmpl_listLayout);
        panelEmpl_listLayout.setHorizontalGroup(
            panelEmpl_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_listLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelEmpl_list, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelEmpl_listLayout.setVerticalGroup(
            panelEmpl_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_listLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelEmpl_list)
                .addContainerGap())
        );

        panelEmpl_form.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulaire"));

        labelEmpl_nom.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelEmpl_nom.setText("Nom");

        labelEmpl_prenom.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelEmpl_prenom.setText("Prénom");

        labelEmpl_poste.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelEmpl_poste.setText("Poste");

        labelEmpl_habilitation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelEmpl_habilitation.setText("Habilitation");

        javax.swing.GroupLayout panelEmpl_formLayout = new javax.swing.GroupLayout(panelEmpl_form);
        panelEmpl_form.setLayout(panelEmpl_formLayout);
        panelEmpl_formLayout.setHorizontalGroup(
            panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_formLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmpl_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_poste, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_habilitation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldEmpl_poste, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldEmpl_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldEmpl_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldEmpl_habilitation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelEmpl_formLayout.setVerticalGroup(
            panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_formLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldEmpl_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_nom))
                .addGap(27, 27, 27)
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmpl_prenom)
                    .addComponent(textFieldEmpl_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldEmpl_poste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_poste))
                .addGap(31, 31, 31)
                .addGroup(panelEmpl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldEmpl_habilitation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpl_habilitation))
                .addContainerGap(245, Short.MAX_VALUE))
        );

        panelEmpl_valid.setBorder(javax.swing.BorderFactory.createTitledBorder("Valider"));

        buttonEmpl_insert.setLabel("Ajouter");

        buttonEmpl_update.setEnabled(false);
        buttonEmpl_update.setLabel("Modifier");

        buttonEmpl_delete.setEnabled(false);
        buttonEmpl_delete.setLabel("Supprimer");

        javax.swing.GroupLayout panelEmpl_validLayout = new javax.swing.GroupLayout(panelEmpl_valid);
        panelEmpl_valid.setLayout(panelEmpl_validLayout);
        panelEmpl_validLayout.setHorizontalGroup(
            panelEmpl_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_validLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonEmpl_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonEmpl_update, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonEmpl_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelEmpl_validLayout.setVerticalGroup(
            panelEmpl_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpl_validLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEmpl_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonEmpl_insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonEmpl_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonEmpl_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelEmplLayout = new javax.swing.GroupLayout(panelEmpl);
        panelEmpl.setLayout(panelEmplLayout);
        panelEmplLayout.setHorizontalGroup(
            panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 971, Short.MAX_VALUE)
            .addGroup(panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelEmplLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelEmpl_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelEmpl_form, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelEmpl_valid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        panelEmplLayout.setVerticalGroup(
            panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
            .addGroup(panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelEmplLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelEmpl_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelEmplLayout.createSequentialGroup()
                            .addComponent(panelEmpl_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(panelEmpl_valid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        tabbedPanePers.addTab("Employés", panelEmpl);

        panelCand_list.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste des candidats"));

        tableCand_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom", "Prénom", "Date de naissance", "Pays"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPanelCand_list.setViewportView(tableCand_list);

        javax.swing.GroupLayout panelCand_listLayout = new javax.swing.GroupLayout(panelCand_list);
        panelCand_list.setLayout(panelCand_listLayout);
        panelCand_listLayout.setHorizontalGroup(
            panelCand_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_listLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelCand_list, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCand_listLayout.setVerticalGroup(
            panelCand_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_listLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPanelCand_list)
                .addContainerGap())
        );

        panelCand_form.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulaire"));

        labelCand_nom.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCand_nom.setText("Nom");

        labelCand_prenom.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCand_prenom.setText("PrÃ©nom");

        labelCand_dateNaissance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCand_dateNaissance.setText("Date de naissance");

        labelCand_pays.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCand_pays.setText("Pays");

        textFieldCand_dateNaissance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        javax.swing.GroupLayout panelCand_formLayout = new javax.swing.GroupLayout(panelCand_form);
        panelCand_form.setLayout(panelCand_formLayout);
        panelCand_formLayout.setHorizontalGroup(
            panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_formLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCand_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCand_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCand_dateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCand_pays, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textFieldCand_nom, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(textFieldCand_prenom, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(textFieldCand_pays, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(textFieldCand_dateNaissance))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCand_formLayout.setVerticalGroup(
            panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_formLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldCand_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCand_nom))
                .addGap(27, 27, 27)
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCand_prenom)
                    .addComponent(textFieldCand_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCand_dateNaissance)
                    .addComponent(textFieldCand_dateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(panelCand_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldCand_pays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCand_pays))
                .addContainerGap(245, Short.MAX_VALUE))
        );

        panelCand_valid.setBorder(javax.swing.BorderFactory.createTitledBorder("Valider"));

        buttonCand_insert.setLabel("Ajouter");

        buttonCand_update.setLabel("Modifier");

        buttonCand_delete.setLabel("Supprimer");

        javax.swing.GroupLayout panelCand_validLayout = new javax.swing.GroupLayout(panelCand_valid);
        panelCand_valid.setLayout(panelCand_validLayout);
        panelCand_validLayout.setHorizontalGroup(
            panelCand_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_validLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonCand_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCand_update, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCand_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelCand_validLayout.setVerticalGroup(
            panelCand_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCand_validLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCand_validLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCand_insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonCand_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonCand_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelCandLayout = new javax.swing.GroupLayout(panelCand);
        panelCand.setLayout(panelCandLayout);
        panelCandLayout.setHorizontalGroup(
            panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 971, Short.MAX_VALUE)
            .addGroup(panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCandLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelCand_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelCand_form, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelCand_valid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        panelCandLayout.setVerticalGroup(
            panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
            .addGroup(panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCandLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelCand_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelCandLayout.createSequentialGroup()
                            .addComponent(panelCand_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(panelCand_valid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        tabbedPanePers.addTab("Candidats", panelCand);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPers_sort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabbedPanePers))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPers_sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPanePers)
                .addContainerGap())
        );
        
        /* EVENEMENTS */
        buttonEmpl_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonEmpl_insert(evt);
            }
        });
        buttonCand_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonCand_insert(evt);
            }
        });
        
        buttonEmpl_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonEmpl_update(evt);
            }
        });
        buttonCand_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonCand_update(evt);
            }
        });
        
        buttonEmpl_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonEmpl_delete(evt);
            }
        });
        buttonCand_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	buttonCand_delete(evt);
            }
        });
        
        tableCand_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectionCandidat(evt);
            }
        });
        tableEmpl_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectionEmploye(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxPers_sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPers_sortActionPerformed
        // TODO add your handling code here:
        tabbedPanePers.setSelectedIndex(comboBoxPers_sort.getSelectedIndex());
    }//GEN-LAST:event_comboBoxPers_sortActionPerformed


    /**
     * Event Click Insert Employe
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * 
     */
    private void buttonEmpl_insert (ActionEvent evt){
    	
    	//test not null
    	if ((textFieldEmpl_nom.getText().equals("")) || (textFieldEmpl_prenom.getText().equals("")) || (textFieldEmpl_poste.getText().equals("")) || (textFieldEmpl_habilitation.getText().equals(""))) {
    		jFrameAlert jFrameAlertNull = new jFrameAlert("Vous ne pouvez laisser de champs vide.");
    		jFrameAlertNull.setVisible(true);
		}
    	else {
	    		String nom = textFieldEmpl_nom.getText();
	        	String prenom = textFieldEmpl_prenom.getText();
	        	String poste = textFieldEmpl_poste.getText();
	        	
	        	Employe employe = new Employe(nom, prenom);
	        	employe.setPoste(poste);
		    	
		    	try {
		    		EmployeDAO employeDAO = new EmployeDAO();
			    	employeDAO.insert(cnx, employe);

				} catch (Exception e) {
			    	jFrameAlert jFrameAlert = new jFrameAlert("L'ajout a ï¿½chouï¿½. Rï¿½ï¿½ssayez.");
			    	jFrameAlert.setVisible(true);
				} finally {
					//Clear textField
			    	textFieldEmpl_nom.setText("");
			    	textFieldEmpl_prenom.setText("");
			    	textFieldEmpl_poste.setText("");
			    	
			    	refreshEmploye();
				}//end try-catch-finally

		}//end else
    }

    /**
     * Event Click Insert Candidat
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * 
     */
    private void buttonCand_insert (ActionEvent evt){
    	
    	//test not null
    	if ((textFieldCand_nom.getText().equals("")) || (textFieldCand_prenom.getText().equals("")) || (textFieldCand_pays.getText().equals("")) || (textFieldCand_dateNaissance.getText().equals(""))) {
    		jFrameAlert jFrameAlertNull = new jFrameAlert("Vous ne pouvez laisser de champs vide.");
    		jFrameAlertNull.setVisible(true);
		}
    	else {
    		//test date convert
	    	SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
	    	String dateString = textFieldCand_dateNaissance.getText();
	    	
	    	try {
	    		Date dateNaissance = formatter.parse(dateString);
	       		
	    		String nom = textFieldCand_nom.getText();
	        	String prenom = textFieldCand_prenom.getText();
	        	String pays = textFieldCand_pays.getText();
	        	
	        	Candidat candidat = new Candidat(nom, prenom);
		    	candidat.setPays(pays);
		    	candidat.setDateNaissance(dateNaissance);
		    	
		    	try {
			    	CandidatDAO candidatDAO = new CandidatDAO();
			    	candidatDAO.insert(cnx, candidat);

				} catch (Exception e) {
			    	jFrameAlert jFrameAlert = new jFrameAlert("L'ajout a échoué. Rééssayez.");
			    	jFrameAlert.setVisible(true);
				} finally {
					//Clear textField
			    	textFieldCand_nom.setText("");
			    	textFieldCand_prenom.setText("");
			    	textFieldCand_pays.setText("");
			    	
			    	refreshCandidat();
				}//end try-catch-finally
		    	
	    	} catch (ParseException e) {
	    		jFrameAlert jFrameAlertDate = new jFrameAlert("L'ajout a ï¿½chouï¿½. Rï¿½ï¿½ssayez 2 .");
	    		jFrameAlertDate.setVisible(true);
	    	}//end try-catch
	    	
		}//end else
    }
    
    /**
     * Event Click Update Employe
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * 
     */ 
    private void buttonEmpl_update(ActionEvent evt) {
    	  	
    	if ((textFieldEmpl_nom.getText().equals("")) || (textFieldEmpl_prenom.getText().equals("")) || (textFieldEmpl_poste.getText().equals(""))) {
    		jFrameAlert jFrameAlertNull = new jFrameAlert("Vous ne pouvez laisser de champs vide.");
    		jFrameAlertNull.setVisible(true);
		}
    	else {
	    	int row = tableEmpl_list.getSelectedRow();
	    	Employe e = employes.get(row);
	    	
	    	int identifiant = (int) e.getIdentifiant();
	    	String nom = textFieldEmpl_nom.getText();
	    	String prenom = textFieldEmpl_prenom.getText();
	    	String poste = textFieldEmpl_poste.getText();
	    	String habilitation = textFieldEmpl_habilitation.getText();
	    	
	    	try {

	            //Creation de l'employe
	            Employe employe = new Employe(nom, prenom);
	            employe.setPoste(poste);
	
	            if(textFieldEmpl_habilitation.getText() != null){
	            	try {
	            		int habilitationParse = Integer.parseInt(habilitation);
	                    employe.setHabilitation(habilitationParse);
					} catch (Exception e2) {
	
					}
	            }
	
	            employe.setIdentifiant(identifiant);
	
	            EmployeDAO employeDAO = new EmployeDAO();
	            employeDAO.update(cnx, employe);
	
	        } catch (Exception ex) {
	        	jFrameAlert jFrameAlertNull = new jFrameAlert("Echec de la mise a jour.");
	    		jFrameAlertNull.setVisible(true);
	        } finally {
	            //Clear textField
	            textFieldEmpl_nom.setText("");
	            textFieldEmpl_prenom.setText("");
	            textFieldEmpl_poste.setText("");
	            textFieldEmpl_habilitation.setText("");
	
	            buttonEmpl_insert.setEnabled(true);
	            buttonEmpl_update.setEnabled(false);
	            buttonEmpl_delete.setEnabled(false);
	            
	            refreshEmploye();
	        }
    	}
    }
    
    /**
     * Event Click Update employe
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * @param evt
     */
    private void buttonCand_update(ActionEvent evt) {
    	
    	if ((textFieldCand_nom.getText().equals("")) || (textFieldCand_prenom.getText().equals("")) || (textFieldCand_pays.getText().equals("")) || (textFieldCand_dateNaissance.getText().equals(""))) {
    		jFrameAlert jFrameAlertNull = new jFrameAlert("Vous ne pouvez laisser de champs vide.");
    		jFrameAlertNull.setVisible(true);
		}
    	else {
    		//test date convert
	    	SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
	    	String dateString = textFieldCand_dateNaissance.getText();
	    	
	    	try {
	    		int row = tableCand_list.getSelectedRow();
		    	Candidat c = candidats.get(row);
		    	
		    	int identifiant = (int) c.getIdentifiant();
		    	String nom = textFieldCand_nom.getText();
		    	String prenom = textFieldCand_prenom.getText();
		    	String pays = textFieldCand_pays.getText();
		    	
	    		Date dateNaissance = formatter.parse(dateString);
	        	
	    		//Creation de l'employe
		    	c.setPays(pays);
		    	c.setDateNaissance(dateNaissance);
	    		
		    	try {

			    	CandidatDAO candidatDAO = new CandidatDAO();
			    	candidatDAO.update(cnx, c);
			    	
				} catch (Exception ex) {
					jFrameAlert jFrameAlertNull = new jFrameAlert("Modification Impossible.");
		    		jFrameAlertNull.setVisible(true);
				} finally {
					//Clear textField
					textFieldCand_nom.setText("");
					textFieldCand_prenom.setText("");
					textFieldCand_pays.setText("");
					
					buttonCand_insert.setEnabled(true);
		            buttonCand_update.setEnabled(false);
		            buttonCand_delete.setEnabled(false);
					
					refreshCandidat();
				}
	    	} catch (Exception ex) {
	    		jFrameAlert jFrameAlertNull = new jFrameAlert("Modification Impossible.");
	    		jFrameAlertNull.setVisible(true);
	    	}
    	}
    }
    
    /**
     * Event selection line employe
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * @param evt
     */
    private void selectionCandidat(java.awt.event.MouseEvent evt) {
    	
        int row = tableCand_list.rowAtPoint(evt.getPoint());
        Candidat c = candidats.get(row);
        
        textFieldCand_nom.setText(c.getNom());
        textFieldCand_prenom.setText(c.getPrenom());
        textFieldCand_pays.setText(c.getPays());
        textFieldCand_dateNaissance.setValue(c.getDateNaissance());
        
        //desactivation du bouton Insert
        buttonCand_insert.setEnabled(false);
        buttonCand_update.setEnabled(true);
        buttonCand_delete.setEnabled(true);
    }
    
    /**
     * Event selection line candidat
     * @author Julien BUREAU <julien.bureau02@gmail.com>
     * @param evt
     */
    private void selectionEmploye(java.awt.event.MouseEvent evt) { 
        int row = tableEmpl_list.rowAtPoint(evt.getPoint());
        Employe e = employes.get(row);
        
        textFieldEmpl_nom.setText(e.getNom());
        textFieldEmpl_prenom.setText(e.getPrenom());
        textFieldEmpl_poste.setText(e.getPoste());
        textFieldEmpl_habilitation.setText(Integer.toString(e.getHabilitation()));
        
        buttonEmpl_insert.setEnabled(false);
        buttonEmpl_update.setEnabled(true);
        buttonEmpl_delete.setEnabled(true);
        
    }
    
    /**
     * 
     * @param evt
     */
    private void buttonEmpl_delete(ActionEvent evt) {
    	
    	int row = tableEmpl_list.getSelectedRow();
    	Employe e = employes.get(row);
    	
    	int identifiant = (int) e.getIdentifiant();
    	String nom = textFieldEmpl_nom.getText();
    	String prenom = textFieldEmpl_prenom.getText();

    	try {
    		
            //Creation de l'employe
            Employe employe = new Employe(nom, prenom);
            employe.setIdentifiant(identifiant);

            EmployeDAO employeDAO = new EmployeDAO();
            employeDAO.delete(cnx, employe);

        } catch (Exception ex) {

        } finally {
            //Clear textField
            textFieldEmpl_nom.setText("");
            textFieldEmpl_prenom.setText("");
            textFieldEmpl_poste.setText("");
            textFieldEmpl_habilitation.setText("");

            buttonEmpl_insert.setEnabled(true);
            buttonEmpl_update.setEnabled(false);
            buttonEmpl_delete.setEnabled(false);
            
            refreshEmploye();
        }
    }
    
    /**
     * 
     * @param evt
     */
    private void buttonCand_delete(ActionEvent evt) {
    	
    	int row = tableCand_list.getSelectedRow();
    	Candidat c = candidats.get(row);
    	
    	int identifiant = (int) c.getIdentifiant();
    	String nom = textFieldCand_nom.getText();
    	String prenom = textFieldCand_prenom.getText();

    	try {
    		
            //Creation de l'employe
            Candidat candidat = new Candidat(nom, prenom);
            candidat.setIdentifiant(identifiant);

            CandidatDAO candidatDAO = new CandidatDAO();
            candidatDAO.delete(cnx, candidat);

        } catch (Exception ex) {

        } finally {
            //Clear textField
            textFieldCand_nom.setText("");
            textFieldCand_prenom.setText("");
            textFieldCand_pays.setText("");

            buttonCand_insert.setEnabled(true);
            buttonCand_update.setEnabled(false);
            buttonCand_delete.setEnabled(false);
            
            refreshCandidat();
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCand_delete;
    private javax.swing.JButton buttonCand_insert;
    private javax.swing.JButton buttonCand_update;
    private javax.swing.JButton buttonEmpl_delete;
    private javax.swing.JButton buttonEmpl_insert;
    private javax.swing.JButton buttonEmpl_update;
    private javax.swing.JComboBox comboBoxPers_sort;
    private javax.swing.JLabel labelCand_dateNaissance;
    private javax.swing.JLabel labelCand_nom;
    private javax.swing.JLabel labelCand_pays;
    private javax.swing.JLabel labelCand_prenom;
    private javax.swing.JLabel labelEmpl_habilitation;
    private javax.swing.JLabel labelEmpl_nom;
    private javax.swing.JLabel labelEmpl_poste;
    private javax.swing.JLabel labelEmpl_prenom;
    private javax.swing.JPanel panelCand;
    private javax.swing.JPanel panelCand_form;
    private javax.swing.JPanel panelCand_list;
    private javax.swing.JPanel panelCand_valid;
    private javax.swing.JPanel panelEmpl;
    private javax.swing.JPanel panelEmpl_form;
    private javax.swing.JPanel panelEmpl_list;
    private javax.swing.JPanel panelEmpl_valid;
    private javax.swing.JPanel panelPers_sort;
    private javax.swing.JScrollPane scrollPanelCand_list;
    private javax.swing.JScrollPane scrollPanelEmpl_list;
    private javax.swing.JTabbedPane tabbedPanePers;
    private javax.swing.JTable tableCand_list;
    private javax.swing.JTable tableEmpl_list;
    private javax.swing.JFormattedTextField textFieldCand_dateNaissance;
    private javax.swing.JTextField textFieldCand_nom;
    private javax.swing.JTextField textFieldCand_pays;
    private javax.swing.JTextField textFieldCand_prenom;
    private javax.swing.JTextField textFieldEmpl_habilitation;
    private javax.swing.JTextField textFieldEmpl_nom;
    private javax.swing.JTextField textFieldEmpl_poste;
    private javax.swing.JTextField textFieldEmpl_prenom;
    // End of variables declaration//GEN-END:variables
}
